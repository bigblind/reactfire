/*!
 * ReactFire is an open-source JavaScript library that allows you to add a
 * realtime data source to your React apps by providing an easy way to let
 * Firebase populate the state of React components.
 *
 * ReactFire 0.0.0
 * https://github.com/firebase/reactfire/
 * License: MIT
 */
!function(t,e){"use strict";if("object"==typeof exports){var i=require("react");module.exports=e(i)}else t.ReactFireMixin=e(t.React)}(this,function(t){"use strict";function e(t){var e;return e="function"==typeof t.key?t.key():"string"==typeof t.key||null===t.key?t.key:t.name()}function i(t){var e;return e="function"==typeof t.ref?t.ref():t.ref}function n(t,e){for(var i=0,n=t.length;i<n;++i)if(t[i][".key"]===e)return i;return-1}function r(t){throw new Error("ReactFire: "+t)}function s(t){var e;"string"!=typeof t?e="Bind variable must be a string. Got: "+t:0===t.length?e='Bind variable must be a non-empty string. Got: ""':t.length>768?e="Bind variable is too long to be stored in Firebase. Got: "+t:/[\[\].#$\/\u0000-\u001F\u007F]/.test(t)&&(e="Bind variable cannot contain any of the following characters: . # $ ] [ /. Got: "+t),"undefined"!=typeof e&&r(e)}function a(t,e){var i={};return"object"==typeof e&&null!==e?i=e:i[".value"]=e,i[".key"]=t,i}function o(t,i){var n=e(i),r=i.val();this.data[t]=a(n,r),this.setState(this.data)}function f(t,i,r){var s,o=e(i),f=i.val(),h=this.data[t];if(null===r)s=0;else{var d=n(h,r);s=d+1}h.splice(s,0,a(o,f)),this.setState(this.data)}function h(t,i){var r=this.data[t],s=n(r,e(i));r.splice(s,1),this.setState(this.data)}function d(t,i){var r=e(i),s=i.val(),o=this.data[t],f=n(o,r);o[f]=a(r,s),this.setState(this.data)}function c(t,i,r){var s,a=e(i),o=this.data[t],f=n(o,a),h=o.splice(f,1)[0];if(null===r)s=0;else{var d=n(o,r);s=d+1}o.splice(s,0,h),this.setState(this.data)}function u(t,e,n,a){"[object Object]"!==Object.prototype.toString.call(t)&&r("Invalid Firebase reference"),s(e),"undefined"!=typeof this.firebaseRefs[e]&&r("this.state."+e+" is already bound to a Firebase reference"),this.firebaseRefs[e]=i(t),a?(this.data[e]=[],this.setState(this.data),this.firebaseListeners[e]={child_added:t.on("child_added",f.bind(this,e),n),child_removed:t.on("child_removed",h.bind(this,e),n),child_changed:t.on("child_changed",d.bind(this,e),n),child_moved:t.on("child_moved",c.bind(this,e),n)}):this.firebaseListeners[e]={value:t.on("value",o.bind(this,e),n)}}var l={componentWillMount:function(){this.data={},this.firebaseRefs={},this.firebaseListeners={}},componentWillUnmount:function(){for(var t in this.firebaseRefs)this.firebaseRefs.hasOwnProperty(t)&&this.unbind(t)},bindAsArray:function(t,e,i){var n=u.bind(this);n(t,e,i,!0)},bindAsObject:function(t,e,i){var n=u.bind(this);n(t,e,i,!1)},unbind:function(t,e){s(t),"undefined"==typeof this.firebaseRefs[t]&&r("this.state."+t+" is not bound to a Firebase reference");for(var i in this.firebaseListeners[t])if(this.firebaseListeners[t].hasOwnProperty(i)){var n=this.firebaseListeners[t][i];this.firebaseRefs[t].off(i,n)}delete this.firebaseRefs[t],delete this.firebaseListeners[t];var a={};a[t]=void 0,this.setState(a,e)}};return l.createContainer=function(e,i){return t.createClass({mixins:[l],getInitialState:function(){return{}},makeBindVar:function(t){return t+"__bindvar"},getStateFromRefs:function(t,e){var n={refs:i};"function"==typeof i&&(n.refs=i(t)),e.refs||(e.refs={});var r,s;for(r in n.refs)n.refs.hasOwnProperty(r)&&(s=this.makeBindVar(r),e.refs.hasOwnProperty(r)?this.updateBinding(s,e.refs[r],n.refs[r]):this.addBinding(s,n.refs[r]));for(r in e.refs)e.refs.hasOwnProperty(r)&&!n.refs.hasOwnProperty(r)&&this.removeBinding(this.makeBindVar(r));return n},addBinding:function(t,e){"array"===e.type?this.bindAsArray(e.ref,t):"object"===e.type?this.bindAsObject(e.ref,t):r("Unknown type to bind as: "+e.type+".l")},updateBinding:function(t,e,i){e.ref.toString()===i.ref.toString()&&e.type===i.type||(this.removeBinding(t),this.addBinding(t,i))},removeBinding:function(t){this.unbind(t)},componentWillMount:function(){this.setState(function(t){return this.getStateFromRefs(this.props,t)})},componentWillReceiveProps:function(t){this.setState(function(e){return this.getStateFromRefs(t,e)})},getDataProps:function(){var t={};for(var e in this.state.refs)this.state.refs.hasOwnProperty(e)&&(t[e]=this.state[this.makeBindVar(e)]);return t},render:function(){var i=t.createFactory(e),n=Object.assign({},this.props,this.getDataProps());return i(n)}})},l});